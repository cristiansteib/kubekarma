apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: operator-controller
build:
  artifacts:
    - image: localhost:5000/network-policy-test-operator
      docker:
        dockerfile: operator.Dockerfile

manifests:
  helm:
    releases:
      - name: kubekarmar
        chartPath: chart
        valuesFiles:
          - dev/values.yaml
deploy:
  kubectl:
    hooks:
      before:
        - host:
            command: ["kubectl", "apply", "-f", "dev/namespace.yaml"]

        # Clean the environment before performing the deployment
        - host:
            command: [ "kubectl", "delete", "-f", "chart/crds/NetworkTestSuite.yaml", "--ignore-not-found=true" ]
        - host:
            command: [ "sleep", "1" ]
        - host:
            command: ["kubectl", "apply", "-f", "chart/crds/NetworkTestSuite.yaml"]
        - host:
            command: [ "kubectl", "delete", "-f", "examples/NetworkTestSuite/test_with_all_asserts.yaml", "--ignore-not-found=true", "--namespace=another-namespace" ]


        # create a few Kopf-specific custom resources in the cluster
        # kubectl apply -f https://github.com/nolar/kopf/raw/main/peering.yaml
#        - host:
#            command: ["kubectl", "apply", "-f", "https://github.com/nolar/kopf/raw/main/peering.yaml"]

---
apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: worker
build:
  artifacts:
    - image: localhost:5000/network-policy-test-worker
      docker:
        dockerfile: worker.Dockerfile
      hooks:
        after:
          - command: ["dev/set-image"]
