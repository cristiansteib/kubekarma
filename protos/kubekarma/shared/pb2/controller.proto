syntax = "proto3";

enum TestStatus {
  // ERROR: when some exception was raised during the execution of the test case
  ERROR = 0;
  // SUCCEEDED: when the test case was executed successfully
  SUCCEEDED = 1;
  // FAILED: when the test case was executed but the assertion failed
  FAILED = 2;
  // NOTIMPLEMENTED: when the test case code is not implemented yet
  NOTIMPLEMENTED = 3;
}

/**
  TestCaseResult represents and individual test case result
*/
message TestCaseResult {
  // The specific name of the test case
  string name = 1;

  TestStatus status = 2;
  // How long it took to execute the test case
  string execution_duration = 3;
  // When the test case started executing
  string execution_start_time = 4;
  // errorMessage is only set when the status is ERROR and it contains the
  // exception message and stack trace
  string error_message = 5;
}


/**
  TestSuiteResult represents the result of a whole test suite execution
*/
message ProcessTestSuiteResultsRequest {
  // name: is the name of the test suite
  string name = 1;
  // the time when the test suite started executing
  // it should be in ISO 8601 format
  string started_at_time = 2;
  repeated TestCaseResult test_case_results = 3;
  // token: is used to identify the test suite execution
  string token = 4;
}


message ProcessTestSuiteResultsResponse {
  string message = 1;
}

service ControllerService {

  // ProcessTestSuiteResults is called by the test runner to report the results of the execution
  rpc ProcessTestSuiteResults (ProcessTestSuiteResultsRequest) returns (ProcessTestSuiteResultsResponse) {}
}